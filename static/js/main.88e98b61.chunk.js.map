{"version":3,"sources":["components/SubjectViewer.tsx","components/Table.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SubjectTable","currentSem","currYear","Card","Row","id","name","credits","map","sbj","OurTable","useState","currentSemester","setSemester","currentYear","setYear","semester","year","semesters","addSem","Button","onClick","tempsem","tempyear","temp","sems","push","className","sem","App","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAKO,SAASA,EAAT,GAGW,IAHYC,EAGb,EAHaA,WAAYC,EAGzB,EAHyBA,SAWtC,OACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UAAK,+CAAkBH,EAAlB,SAAoCC,OACzC,kCACI,+BAAI,0CAAiB,4CAAmB,4CAXrB,CAC3B,CAACG,GAAI,UAAWC,KAAM,yCAA0CC,QAAS,GACzE,CAACF,GAAI,OAAQC,KAAM,YAAaC,QAAS,GACzC,CAACF,GAAI,OAAQC,KAAM,YAAaC,QAAS,GACzC,CAACF,GAAI,OAAQC,KAAM,YAAaC,QAAS,GACzC,CAACF,GAAI,OAAQC,KAAM,YAAaC,QAAS,IAOnBC,KAAI,SAACC,GACf,OAAO,+BACH,6BAAKA,EAAIJ,KACT,6BAAKI,EAAIH,OACT,6BAAKG,EAAIF,YAHGE,EAAIH,eCTjC,SAASI,IACZ,MAAuCC,mBAAiB,GAAxD,mBAAOC,EAAP,KAAwBC,EAAxB,KACA,EAA+BF,mBAAiB,GAAhD,mBAAOG,EAAP,KAAoBC,EAApB,KAKA,EAA4BJ,mBAAsB,CAAC,CAACK,SAAUJ,EAAiBK,KAAMH,KAArF,mBAAOI,EAAP,KAAkBC,EAAlB,KAqBA,OACI,qCACI,cAACf,EAAA,EAAD,UAAK,cAACgB,EAAA,EAAD,CAAQC,QAtBrB,WACI,IAAMC,EAAUV,EAAgB,EAC5BW,EAAWT,EACVQ,EAAQ,IAAK,GAEdP,EADAQ,GAAY,GAIhBV,EAAYS,GACZ,IAAME,EAAkB,CAACR,SAAUM,EAASL,KAAMM,GAE5CE,EAAoBP,EAC1BA,EAAUQ,KAAKF,GACfL,EAAOM,IASgCE,UAAU,MAAxC,4BACL,cAACvB,EAAA,EAAD,UACI,gCACMc,EAAUV,KAAI,SAACoB,GACb,OAAO,6BACH,6BAAI,cAAC5B,EAAD,CAAcC,WAAY2B,EAAIZ,SAAUd,SAAU0B,EAAIX,UAD9CW,EAAIZ,oB,YCL7Ba,MAVf,WAII,OACI,cAACC,EAAA,EAAD,UACI,cAACpB,EAAD,OCxBGqB,EAZS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHpBQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5Bb,M","file":"static/js/main.88e98b61.chunk.js","sourcesContent":["import React from \"react\";\nimport {Subject} from \"../interfaces/subject\";\nimport { Card, Row } from \"react-bootstrap\";\n//import { TableFace } from \"../interfaces/tableface\";\n\nexport function SubjectTable({currentSem, currYear}:{\n    currentSem: number,\n    currYear: number\n}) : JSX.Element {\n    const subjectList: Subject[] = [\n        {id: \"CISC106\", name: \"General Computer Science for Engineers\", credits: 3},\n        {id: \"CISC\", name: \"ClassName\", credits: 3},\n        {id: \"CISC\", name: \"ClassName\", credits: 3},\n        {id: \"CISC\", name: \"ClassName\", credits: 3},\n        {id: \"CISC\", name: \"ClassName\", credits: 3}];\n    \n    return (\n        <Card>\n            <Row><strong>Semester {currentSem} Year {currYear}</strong></Row>\n            <table>\n                <tr><th>Class ID</th><th>Class Name</th><th>Credits</th></tr>\n                { subjectList.map((sbj: Subject) => {\n                    return <tr key={sbj.name}>\n                        <td>{sbj.id}</td>\n                        <td>{sbj.name}</td>\n                        <td>{sbj.credits}</td>\n                    </tr>;\n                })}\n            </table>\n        </Card>\n    );\n    //Table setup credit to Dr. Bart\n}","import { Row, Button } from \"react-bootstrap\";\nimport React from \"react\";\nimport { SubjectTable } from \"./SubjectViewer\";\nimport { TableFace } from \"../interfaces/tableface\";\nimport { useState } from \"react\";\n\n/*\nI think for this it should return a card and several subject components (which will need to be made for ease of adding classes).\nIt should have the buttons to add courses.\n3 columns 5 rows default?\n-NEEDS SUBJECTVIEWER COMPONENT FOR RETURN\n-NEEDS \"ADD CLASS\" BUTTON\n*/\nexport function OurTable() : JSX.Element {\n    const [currentSemester, setSemester] = useState<number>(1);\n    const [currentYear, setYear] = useState<number>(1);\n    //let newSemester: TableFace = \n    /*const semesters: TableFace[] = [\n        {semester: 1}\n    ];*/\n    const [semesters, addSem] = useState<TableFace[]>([{semester: currentSemester, year: currentYear}]);\n    function addSemester() {\n        const tempsem = currentSemester+1;\n        let tempyear = currentYear;\n        if ((tempsem%2)===1) {\n            tempyear += 1;\n            setYear(tempyear);\n        }\n\n        setSemester(tempsem);\n        const temp: TableFace = {semester: tempsem, year: tempyear};\n        //temp.semester = currentSemester;\n        const sems: TableFace[] = semesters;\n        semesters.push(temp);\n        addSem(sems);\n    }\n\n    /*const tempSems: TableFace[] = semesters;\n    tempSems.push({semester: currentSemester});\n    addSem(tempSems);*/\n\n    return (\n        <>\n            <Row><Button onClick={addSemester} className=\"m-3\">Add Semester</Button></Row>\n            <Row>\n                <table>\n                    { semesters.map((sem: TableFace) => {\n                        return <tr key={sem.semester}>\n                            <td><SubjectTable currentSem={sem.semester} currYear={sem.year}></SubjectTable></td>\n                        </tr>;\n                    })}\n                </table>\n            </Row>\n        </>\n        //<SubjectTable currentSem={currentSemester}></SubjectTable>\n    );\n}","import React from \"react\";\n//import { useState } from \"react\";\n//import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { OurTable } from \"./components/Table\";\nimport { Container } from \"react-bootstrap\";\n/*\n-NEEDS ADD TABLE BUTTON\n-NEEDS TABLE COMPONENT RETURNED\n*/\n\n/*function App(): JSX.Element {\n\n    \n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                UD CIS Scheduler\n                <p>\n                    Edit <code>src/App.tsx</code> and save to reload.\n                </p>\n                <p>Dara McNally</p>\n                <p>Riyara Master</p>\n                <p>Trea Holley</p> \n            </header>\n        </div>\n    );\n}*/\n\nfunction App(): JSX.Element {\n\n    \n\n    return (\n        <Container>\n            <OurTable></OurTable>\n        </Container>\n    );\n}\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}